In this package, the following questions will be coded in. modified date: 03/11/14

**************************************************************************
Q1. Majority Element: A majority element in an array A[] of size n is an element that appears more than n/2 times (and hence there is at most one such element).

Write a function which takes an array and emits the majority element (if it exists), otherwise prints NONE as follows:

       I/P : 3 3 4 2 4 4 2 4 4
       O/P : 4 

       I/P : 3 3 4 2 4 4 2 4
       O/P : NONE

reference: http://www.geeksforgeeks.org/majority-element/

**************************************************************************
reading:http://www.geeksforgeeks.org/what-is-memory-leak-how-can-we-avoid/
**************************************************************************
Q2. Write an Efficient Method to Check if a Number is Multiple of 3
The very first solution that comes to our mind is the one that we learned in school. If sum of digits in a number is multiple of 3 then number is multiple of 3 e.g., for 612 sum of digits is 9 so it¡¯s a multiple of 3. But this solution is not efficient. You have to get all decimal digits one by one, add them and then check if sum is multiple of 3.

There is a pattern in binary representation of the number that can be used to find if number is a multiple of 3. If difference between count of odd set bits (Bits set at odd positions) and even set bits is multiple of 3 then is the number.

Example: 23 (00..10111)
1) Get count of all set bits at odd positions (For 23 it¡¯s 3).
2) Get count of all set bits at even positions (For 23 it¡¯s 1).
3) If difference of above two counts is a multiple of 3 then number is also a multiple of 3.

(For 23 it¡¯s 2 so 23 is not a multiple of 3)

Take some more examples like 21, 15, etc¡­

reference: http://www.geeksforgeeks.org/write-an-efficient-method-to-check-if-a-number-is-multiple-of-3/

**************************************************************************
reading: http://www.geeksforgeeks.org/what-are-wild-pointers-how-can-we-avoid/
**************************************************************************
Q3. Given only a pointer to a node to be deleted in a singly linked list, how do you delete it?
A simple solution is to traverse the linked list until you find the node you want to delete. 
But this solution requires pointer to the head node which contradicts the problem statement.

reference: http://www.geeksforgeeks.org/given-only-a-pointer-to-a-node-to-be-deleted-in-a-singly-linked-list-how-do-you-delete-it/
**************************************************************************
reading: http://www.geeksforgeeks.org/understanding-register-keyword/
**************************************************************************
Q5. Power Set Power set P(S) of a set S is the set of all subsets of S. For example S = {a, b, c} then P(s) = {{}, {a}, {b}, {c}, {a,b}, {a, c}, {b, c}, {a, b, c}}.

If S has n elements in it then P(s) will have 2^n elements

reference: http://www.geeksforgeeks.org/power-set/

**************************************************************************
reading: http://www.geeksforgeeks.org/storage-for-strings-in-c/
**************************************************************************
Q6. Below are the different methods to remove duplicates in a string.
reference: http://www.geeksforgeeks.org/remove-all-duplicates-from-the-input-string/
**************************************************************************
reading: http://www.geeksforgeeks.org/swap-strings-in-c/
**************************************************************************
Q7. reading tree article: http://www.geeksforgeeks.org/swap-strings-in-c/
reading graph article: http://www.geeksforgeeks.org/applications-of-depth-first-search/
