package collection2;

import java.util.Stack;

/*
 * Given a roman numeral, convert it to an integer.

 Input is guaranteed to be within the range from 1 to 3999.
 */

public class RomanToInt {

	public static int romanToInt(String s) {
		/*
		 * 'I' = 1, 'V' = 5, 'X' = 10, 'L' = 50, 'C' = 100
		 * 'D' = 500, 'M' = 1000, 
		 */
		Stack<Integer> st = new Stack<Integer>();
		for(int i = 0; i<s.length();i++){
			char temp = s.charAt(i);
			if(temp=='I'){
				st.push(1);
			} else if(temp =='V'){
				st.push(5);
			} else if(temp =='X'){
				st.push(10);
			} else if(temp =='L'){
				st.push(50);
			} else if(temp == 'C') {
				st.push(100);
			} else if(temp == 'D') {
				st.push(500);
			} else if(temp == 'M'){
				st.push(1000);
			}
		}
		
		int last = 0;
		int that = 0;
		int result = 0;
		while(!st.empty()){
			that=st.pop();
			if(that>=last){
				result+=that;
			} else{
				result-=that;
			}
			last = that;
		}
		return result;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(romanToInt("XXXXI"));
	}

}
