In this package, the following questions will be coded in. modified date: 03/06/14

*******************************************************************
Q1. you have a array A{a,b,c,d,e,f...z, aa,ab...az, ba,bb...bz,...,aaa..a,aaa...b,
...,aaa...z}, give a input number num, output A[num-1].

answer: PrintRecursive.java

********************************************************************
Q2. Given k sorted arrays of size n each, merge them and print the sorted output.

Example:

Input:
k = 3, n =  4
arr[][] = { {1, 3, 5, 7},
            {2, 4, 6, 8},
            {0, 9, 10, 11}} ;

Output: 0 1 2 3 4 5 6 7 8 9 10 11 

reference:  http://www.geeksforgeeks.org/merge-k-sorted-arrays/

answer: MergeKSorted.java

*******************************************************************
Q3. Given a number having only one ��1�� and all other ��0��s in its binary representation, find position of the only set bit. 
Source: Microsoft Interview | 18

reference: http://www.geeksforgeeks.org/find-position-of-the-only-set-bit/

answer: FindOnePos.java

*********************************************************************
Q4. Given a linked list, reverse alternate nodes and append them to end of list. Extra allowed space is O(1) 
Examples

Input List:  1->2->3->4->5->6
Output List: 1->3->5->6->4->2

Input List:  12->14->16->18->20
Output List: 12->16->20->18->14

reference: http://www.geeksforgeeks.org/given-linked-list-reverse-alternate-nodes-append-end/

answer: LinkedListReverse.java

*******************************************************************
Q5. Given two rectangles, find if the given two rectangles overlap or not.

Note that a rectangle can be represented by two coordinates, top left and bottom right. So mainly we are given following four coordinates.
l1: Top Left coordinate of first rectangle.
r1: Bottom Right coordinate of first rectangle.
l2: Top Left coordinate of second rectangle.
r2: Bottom Right coordinate of second rectangle.

We need to write a function bool doOverlap(l1, r1, l2, r2) that returns true if the two given rectangles overlap.

reference: http://www.geeksforgeeks.org/find-two-rectangles-overlap/

*******************************************************************
Q6. Given a string, recursively remove adjacent duplicate characters from string. The output string should not have any adjacent duplicates. See following examples.

Input:  azxxzy
Output: ay
First "azxxzy" is reduced to "azzy". The string "azzy" contains duplicates, 
so it is further reduced to "ay".

Input: geeksforgeeg
Output: gksfor
First "geeksforgeeg" is reduced to "gksforgg". The string "gksforgg" contains 
duplicates, so it is further reduced to "gksfor".

Input: caaabbbaacdddd
Output: Empty String

Input: acaaabbbacdddd
Output: acac

reference: http://www.geeksforgeeks.org/recursively-remove-adjacent-duplicates-given-string/

answer: RemoveDuplicates.java

******************************************************************

Q7. In a Red-Black Tree, the maximum height of a node is at most twice the minimum height (The four Red-Black tree properties make sure this is always followed). Given a Binary Search Tree, we need to check for following property.
For every node, length of the longest leaf to node path has not more than twice the nodes on shortest path from node to leaf.

    12                                        40
      \                                     /    \ 
       14                                 10      100    
         \                                        /  \
          16                                     60   150    
 Cannot be a Red-Black Tree              It can be Red-Black Tree
 with any color assignment
 Max height of 12 is 1
 Min height of 12 is 3


          10
        /   \
      5     100
           /   \
          50   150
         /
        40 
 It can also be Red-Black Tree
Expected time complexity is O(n). The tree should be traversed at-most once in the solution.

reference: http://www.geeksforgeeks.org/check-given-binary-tree-follows-height-property-red-black-tree/
