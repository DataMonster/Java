package collection1;

import java.util.Stack;

/*
 * Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
 */
public class ReversePolish {

	public int evalRPN(String[] tokens) {
        Stack<String> st = new Stack<String>();
        for(int i = 0;i<tokens.length;i++){
        	if(tokens[i].equals ("-")||tokens[i].equals ("*")||tokens[i].equals ("/")) {
        		int first = Integer.parseInt(st.pop());
        		int second = Integer.parseInt(st.pop());
        		st.push((first+second)+"");
        	}
        	else {
        		st.push(tokens[i]);
        	}
        }
		return 0;
    }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String s= "+";
		int a =1;
		int b =2;
		System.out.println(a+s+b);
	}

}
