package mercury;

import java.text.DecimalFormat;
import java.util.LinkedList;

public class test2 {

	public static Double getResult(String s) {
		LinkedList<String> list = new LinkedList<String>();
		StringBuffer sb = new StringBuffer();

		for (int i = 0; i < s.length(); i++) {
			char temp = s.charAt(i);
			if (temp == '+' || temp == '-' || temp == '*' || temp == '/') {
				// first add values to the list then add the operator to the
				// list
				String num = sb.toString();
				if (num.length() < 1) {
					list.add("0");
				} else {
					list.add(num);
				}
				sb.delete(0, sb.length());
				list.add(String.valueOf(temp));
			} else {
				// if i is not reaching to the end of the string, append the
				// number to stringbuffer
				if (i != s.length() - 1) {
					sb.append(temp);
				} else {
					// i is the end of the string, add the value to list
					sb.append(temp);
					String num = sb.toString();
					if (num.length() < 1) {
						list.add("0");
					} else {
						list.add(num);
					}
					sb.delete(0, sb.length());
				}
			}
		}

		for (int i = 0; i < list.size(); i++) {
			if (list.get(i).equals("*")) {
				double temp = Double.parseDouble(list.get(i - 1))
						* Double.parseDouble(list.get(i + 1));
				System.out.println("!" + temp);
				list.set(i - 1, String.valueOf(temp));
				list.remove(i);
				list.remove(i);
				i--;
			} else if (list.get(i).equals("/")) {
				double temp = Double.parseDouble(list.get(i - 1))
						/ Double.parseDouble(list.get(i + 1));
				System.out.println("!" + temp);
				list.set(i - 1, String.valueOf(temp));
				list.remove(i);
				list.remove(i);
				i--;
			}
			// list.get(i-1)*list.get(i+1)
			// }
		}
		for (int i = 0; i < list.size(); i++) {
			if (list.get(i).equals("+")) {
				double temp = Double.parseDouble(list.get(i - 1))
						+ Double.parseDouble(list.get(i + 1));
				System.out.println("?" + temp);
				list.set(i - 1, String.valueOf(temp));
				list.remove(i);
				list.remove(i);
				i--;
			}else if (list.get(i).equals("-")) {
				double temp = Double.parseDouble(list.get(i - 1))
						- Double.parseDouble(list.get(i + 1));
				System.out.println("?" + temp);
				list.set(i - 1, String.valueOf(temp));
				list.remove(i);
				list.remove(i);
				i--;
			}

		}
		for (int i = 0; i < list.size(); i++) {
			System.out.print(list.get(i) + " ");

		}
		double result = (double)Math.round(Double.parseDouble(list.get(0))*10)/10;
		//double result = Doublelist.get(0);
		return result;
	}

	public static void main(String[] args) {
		System.out.print(getResult("5.6/0.7*2¨C3.5"));
		LinkedList l1 = new LinkedList();
		l1.add(3);
		l1.add(4);
		l1.add(5);
		l1.add(6);
		l1.remove(2);
		l1.remove(2);
		System.out.println();
		for (int i = 0; i < l1.size(); i++) {
			System.out.print(l1.get(i) + " ");

		}
//		DecimalFormat df = new DecimalFormat("#.00");
	}

}
